---
title: "**A Test of Quarto with uv**"
author: Steve Leo
date: today

format:
  pdf:
    documentclass: article
    geometry:
        - a4paper
        - margin=1in 
    toc: false
    number-sections: true
    colorlinks: true

pdf-engine: xelatex

highlight-style: ayu
code-block-bg: true
code-block-border-left: "#31BAE9"

include-in-header: 
      text: |
        \usepackage{fontspec}
        \usepackage{xunicode}
        \usepackage{xltxtra}
        \usepackage{fvextra}

        \setmainfont[Scale=0.85]{Miller Text}
        \setmonofont{Hack Nerd Font Mono}

        \DefineVerbatimEnvironment{Highlighting}{Verbatim}{
          commandchars=\\\{\},
          breaklines, breaknonspaceingroup, breakanywhere
        }
---

# Introduction
This is a test of Quarto with the Python environment managed with uv.

# Mathematical Symbols
Quarto supports mathematical symbols perfectly:
$$
F(x) = \int_{-\infty}^{+\infty} f(x)dx
$${#eq-example}

# Python Code
Here is an example of plotting with Python:
```{python}
#| warning: False
#| label: fig-polar
#| fig-cap: "A Line Plot on a Polar Axis"

import numpy as np
import matplotlib.pyplot as plt

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r

fig, ax = plt.subplots(subplot_kw={'projection': 'polar'})

ax.plot(theta, r)
ax.set_rticks([0.5, 1, 1.5, 2])
ax.grid(True)

plt.show()
```